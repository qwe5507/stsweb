/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2021-01-02 12:31:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>사용자 등록</title>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("          정적자원들은 resources 폴더에 저장\r\n");
      out.write("\t 현재 프로젝트명에서 user 경로를 더한 상태이기에 상위경로를 올라갔다가 resources를 찾음.\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/style/stylecss.css\" type=\"text/css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"../resources/js/jquery-1.7.1.js\"></script>\r\n");
      out.write("<script  src=\"../resources/js/js_userinput.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body bgcolor=\"#FFFFFF\">\r\n");
      out.write("\r\n");
      out.write("<table class='table1'>\r\n");
      out.write("  <tr bgcolor=\"#3399CC\"> \r\n");
      out.write("    <td height=\"30\" class=\"normalbold\"><font color=\"#FFFFFF\">사용자 정보입력</font></td>\r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>안녕하세요. 우리 홈페이지를 자유롭게 이용하려면 회원가입을 하셔야 합니다.<br>\r\n");
      out.write("      아래의 사항들을 빠짐없이 기록해 주세요.</td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<form method=\"post\" action=\"userInsert.do\" name=\"userinput\" id=\"userinput\">\r\n");
      out.write("  <table class='table2'>\r\n");
      out.write("    <tr> \r\n");
      out.write("      <td class=\"normalbold tb_ttl\"> \r\n");
      out.write("        <div align=\"center\">사용자 ID</div>\r\n");
      out.write("      </td>\r\n");
      out.write("      <td colspan=\"3\" class=\"normal\"> \r\n");
      out.write("        <input type=\"text\" name=\"userId\" id=\"userId\" size=\"20\"> \r\n");
      out.write("        <span id=\"idCheckResult\" style=\"width:150px;color:red\"></span>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr> \r\n");
      out.write("      <td class=\"normalbold tb_ttl\">\r\n");
      out.write("        <div align=\"center\">비밀번호</div>\r\n");
      out.write("      </td>\r\n");
      out.write("      <td width=\"154\" class=\"normal\"> \r\n");
      out.write("        <input type=\"password\" name=\"userPass\" id=\"userPass\">\r\n");
      out.write("      </td>\r\n");
      out.write("      <td class=\"normalbold tb_ttl\"> \r\n");
      out.write("        <div align=\"center\">비밀번호 확인</div>\r\n");
      out.write("      </td>\r\n");
      out.write("      <td width=\"160\"> \r\n");
      out.write("        <input type=\"password\" name=\"userPass2\" id=\"userPass2\">\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr> \r\n");
      out.write("      <td class=\"normalbold tb_ttl\"> \r\n");
      out.write("        <div align=\"center\">사용자 이름</div>\r\n");
      out.write("      </td>\r\n");
      out.write("      <td colspan=\"3\" height=\"23\" class=\"normal\"> \r\n");
      out.write("        <input type=\"text\" name=\"userName\" id=\"userName\">\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <td colspan=\"4\" class=\"normal\"> \r\n");
      out.write("        <div align=\"center\"> \r\n");
      out.write("          <input type=\"button\" name=\"confirm\" id=\"confirm\" value=\"등   록\">\r\n");
      out.write("          <input type=\"reset\" name=\"reset\" value=\"취   소\">\r\n");
      out.write("        </div>\r\n");
      out.write("      </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
